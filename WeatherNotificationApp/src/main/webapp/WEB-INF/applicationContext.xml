<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/tx 
		        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		        http://www.springframework.org/schema/context 
		        http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   			http://www.springframework.org/schema/task
				http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<task:annotation-driven />

	<bean id="MailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="" />
		<property name="password" value="" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
	<!-- Beans Declaration -->
	<bean id="SubscriptionEntity" class="weathernotificationapp.model.SubscriptionEntity" />

	<!-- Subscription Service Declaration -->
	<bean id="SubscriptionService" class="weathernotificationapp.service.SubscriptionService">
		<!--<property name="mailSender" ref="MailSender" />-->
		<property name="subscriptionDAO" ref="SubscriptionDAO" />
	</bean>

	<!-- Subscription Controller Declaration -->
	<bean id="SubscriptionController" class="weathernotificationapp.controller.SubscriptionController">
		<!--<property name="subscriptionService" ref="SubscriptionService" />-->
	</bean>

	<!-- Subscription DAO Declaration -->
	<bean id="SubscriptionDAO" class="weathernotificationapp.dao.SubscriptionDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

	<!-- Data Source Declaration -->
	<bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/weathernotificationapp?characterEncoding=UTF-8" />
		<property name="user" value="weather" />
		<property name="password" value="weather" />
		<property name="maxPoolSize" value="10" />
		<property name="maxStatements" value="0" />
		<property name="minPoolSize" value="5" />
	</bean>
	
	<!-- Session Factory Declaration -->
	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="DataSource" />
		<property name="annotatedClasses">
			<list>
				<value>weathernotificationapp.model.SubscriptionEntity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Transaction Manager is defined -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	
	<!-- Note: authc is a shortcut for using the org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
	<bean id="securityFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="filterChainDefinitions">
			<value>
				/** = authc
			</value>
		</property>
	</bean>
	
</beans>